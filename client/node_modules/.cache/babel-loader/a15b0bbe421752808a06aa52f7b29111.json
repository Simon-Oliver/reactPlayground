{"ast":null,"code":"import _objectSpread from \"/Users/Simon/Desktop/Coding/reactplayground/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\nconst INITIAL_STATE = {\n  loading: true,\n  isSignedIn: null,\n  userName: null,\n  email: null,\n  role: null,\n  isAuth: false\n}; // const loginReducer = (state = INITIAL_STATE, action) => {\n//   const { name, email, role } = action.payload;\n//   switch (action.type) {\n//     case 'SIGN_IN':\n//       return { ...state, isSignedIn: true, userName: name, email, role };\n//     case 'SIGN_OUT':\n//       return { ...state, isSignedIn: false, userId: null };\n//     default:\n//       return state;\n//   }\n// };\n\nconst INTIAL_ORDER = [];\nconst ordersReducer = state = [];\n\nconst isAuthReducer = (state = INITIAL_STATE, action) => {\n  if (action.type === 'IS_AUTH') {\n    console.log(action.payload);\n    const boolean = action.payload.boolean;\n    return _objectSpread({}, state, {\n      isAuth: boolean\n    });\n  }\n\n  return state;\n};\n\nexport default combineReducers({\n  order: ordersReducer,\n  auth: isAuthReducer\n});","map":{"version":3,"sources":["/Users/Simon/Desktop/Coding/reactplayground/client/src/reducers/index.js"],"names":["combineReducers","INITIAL_STATE","loading","isSignedIn","userName","email","role","isAuth","INTIAL_ORDER","ordersReducer","state","isAuthReducer","action","type","console","log","payload","boolean","order","auth"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,OAAO,EAAE,IADW;AAEpBC,EAAAA,UAAU,EAAE,IAFQ;AAGpBC,EAAAA,QAAQ,EAAE,IAHU;AAIpBC,EAAAA,KAAK,EAAE,IAJa;AAKpBC,EAAAA,IAAI,EAAE,IALc;AAMpBC,EAAAA,MAAM,EAAE;AANY,CAAtB,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,aAAa,GAAIC,KAAK,GAAG,EAA/B;;AAEA,MAAMC,aAAa,GAAG,CAACD,KAAK,GAAGT,aAAT,EAAwBW,MAAxB,KAAmC;AACvD,MAAIA,MAAM,CAACC,IAAP,KAAgB,SAApB,EAA+B;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AAD6B,UAErBC,OAFqB,GAETL,MAAM,CAACI,OAFE,CAErBC,OAFqB;AAG7B,6BAAYP,KAAZ;AAAmBH,MAAAA,MAAM,EAAEU;AAA3B;AACD;;AACD,SAAOP,KAAP;AACD,CAPD;;AASA,eAAeV,eAAe,CAAC;AAC7BkB,EAAAA,KAAK,EAAET,aADsB;AAE7BU,EAAAA,IAAI,EAAER;AAFuB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\n\nconst INITIAL_STATE = {\n  loading: true,\n  isSignedIn: null,\n  userName: null,\n  email: null,\n  role: null,\n  isAuth: false\n};\n\n// const loginReducer = (state = INITIAL_STATE, action) => {\n//   const { name, email, role } = action.payload;\n//   switch (action.type) {\n//     case 'SIGN_IN':\n//       return { ...state, isSignedIn: true, userName: name, email, role };\n//     case 'SIGN_OUT':\n//       return { ...state, isSignedIn: false, userId: null };\n//     default:\n//       return state;\n//   }\n// };\n\nconst INTIAL_ORDER = [];\n\nconst ordersReducer = (state = []);\n\nconst isAuthReducer = (state = INITIAL_STATE, action) => {\n  if (action.type === 'IS_AUTH') {\n    console.log(action.payload);\n    const { boolean } = action.payload;\n    return { ...state, isAuth: boolean };\n  }\n  return state;\n};\n\nexport default combineReducers({\n  order: ordersReducer,\n  auth: isAuthReducer\n});\n"]},"metadata":{},"sourceType":"module"}