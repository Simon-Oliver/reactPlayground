{"ast":null,"code":"var _jsxFileName = \"/Users/Simon/Desktop/Coding/reactplayground/client/src/components/Item.js\";\nimport React, { Component } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport io from 'socket.io-client';\nconst socket = io('http://localhost');\nexport default class Item extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: 0,\n      endpoint: 'http://192.168.1.105:5000/'\n    };\n  }\n\n  componentDidMount() {\n    const endpoint = this.state.endpoint; // Very simply connect to the socket\n\n    const socket = socketIOClient(endpoint); // Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\n\n    socket.on('outgoing data', data => this.setState({\n      response: data.num\n    }));\n    socket.emit('incoming data', 'test');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Test\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/Simon/Desktop/Coding/reactplayground/client/src/components/Item.js"],"names":["React","Component","socketIOClient","io","socket","Item","state","response","endpoint","componentDidMount","on","data","setState","num","emit","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,MAAMC,MAAM,GAAGD,EAAE,CAAC,kBAAD,CAAjB;AAEA,eAAe,MAAME,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC1CK,KAD0C,GAClC;AACNC,MAAAA,QAAQ,EAAE,CADJ;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADkC;AAAA;;AAM1CC,EAAAA,iBAAiB,GAAG;AAAA,UACVD,QADU,GACG,KAAKF,KADR,CACVE,QADU,EAElB;;AACA,UAAMJ,MAAM,GAAGF,cAAc,CAACM,QAAD,CAA7B,CAHkB,CAIlB;;AACAJ,IAAAA,MAAM,CAACM,EAAP,CAAU,eAAV,EAA2BC,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEL,MAAAA,QAAQ,EAAEI,IAAI,CAACE;AAAjB,KAAd,CAAnC;AACAT,IAAAA,MAAM,CAACU,IAAP,CAAY,eAAZ,EAA6B,MAA7B;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF;AAKD;;AArByC","sourcesContent":["import React, { Component } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost');\n\nexport default class Item extends Component {\n  state = {\n    response: 0,\n    endpoint: 'http://192.168.1.105:5000/'\n  };\n\n  componentDidMount() {\n    const { endpoint } = this.state;\n    // Very simply connect to the socket\n    const socket = socketIOClient(endpoint);\n    // Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\n    socket.on('outgoing data', data => this.setState({ response: data.num }));\n    socket.emit('incoming data', 'test');\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Test</h3>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}