{"ast":null,"code":"var _jsxFileName = \"/Users/Simon/Desktop/Coding/reactplayground/client/src/components/Item.js\";\nimport React, { Component } from 'react';\nimport socketIOClient from 'socket.io-client';\nexport default class Item extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: 0,\n      endpoint: 'http://192.168.1.105:5000/'\n    };\n\n    this.sendEmit = e => {\n      const socket = socketIOClient(this.state.endpoint);\n      socket.emit('incoming data', e.screenX);\n    };\n  }\n\n  componentDidMount() {\n    const endpoint = this.state.endpoint; // Very simply connect to the socket\n\n    const socket = socketIOClient(endpoint); // Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\n\n    socket.on('outgoing data', data => this.setState({\n      response: data.num\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        height: '100vh',\n        width: '100vw'\n      },\n      onMouseMove: e => this.sendEmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Test Socket.io\"), React.createElement(\"button\", {\n      onClick: this.sendEmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Test Emit\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/Simon/Desktop/Coding/reactplayground/client/src/components/Item.js"],"names":["React","Component","socketIOClient","Item","state","response","endpoint","sendEmit","e","socket","emit","screenX","componentDidMount","on","data","setState","num","render","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC1CG,KAD0C,GAClC;AACNC,MAAAA,QAAQ,EAAE,CADJ;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADkC;;AAAA,SAc1CC,QAd0C,GAc/BC,CAAC,IAAI;AACd,YAAMC,MAAM,GAAGP,cAAc,CAAC,KAAKE,KAAL,CAAWE,QAAZ,CAA7B;AACAG,MAAAA,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA6BF,CAAC,CAACG,OAA/B;AACD,KAjByC;AAAA;;AAM1CC,EAAAA,iBAAiB,GAAG;AAAA,UACVN,QADU,GACG,KAAKF,KADR,CACVE,QADU,EAElB;;AACA,UAAMG,MAAM,GAAGP,cAAc,CAACI,QAAD,CAA7B,CAHkB,CAIlB;;AACAG,IAAAA,MAAM,CAACI,EAAP,CAAU,eAAV,EAA2BC,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEV,MAAAA,QAAQ,EAAES,IAAI,CAACE;AAAjB,KAAd,CAAnC;AACD;;AAODC,EAAAA,MAAM,GAAG;AACP,WACE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAFT;AAGE,MAAA,WAAW,EAAEX,CAAC,IAAI,KAAKD,QAAL,CAAcC,CAAd,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,EAME;AAAQ,MAAA,OAAO,EAAE,KAAKD,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,CADF;AAUD;;AA9ByC","sourcesContent":["import React, { Component } from 'react';\nimport socketIOClient from 'socket.io-client';\n\nexport default class Item extends Component {\n  state = {\n    response: 0,\n    endpoint: 'http://192.168.1.105:5000/'\n  };\n\n  componentDidMount() {\n    const { endpoint } = this.state;\n    // Very simply connect to the socket\n    const socket = socketIOClient(endpoint);\n    // Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\n    socket.on('outgoing data', data => this.setState({ response: data.num }));\n  }\n\n  sendEmit = e => {\n    const socket = socketIOClient(this.state.endpoint);\n    socket.emit('incoming data', e.screenX);\n  };\n\n  render() {\n    return (\n      <div\n        className=\"container\"\n        style={{ height: '100vh', width: '100vw' }}\n        onMouseMove={e => this.sendEmit(e)}\n      >\n        <h3>Test Socket.io</h3>\n        <button onClick={this.sendEmit}>Test Emit</button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}