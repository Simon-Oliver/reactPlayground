{"ast":null,"code":"import _objectSpread from \"/Users/Simon/Desktop/Coding/reactplayground/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\nconst INITIAL_STATE = {\n  loading: true,\n  isSignedIn: null,\n  userName: null,\n  email: null,\n  role: null\n};\n\nconst loginReducer = (state = INITIAL_STATE, action) => {\n  const _action$payload = action.payload,\n        name = _action$payload.name,\n        email = _action$payload.email,\n        role = _action$payload.role;\n\n  switch (action.type) {\n    case 'SIGN_IN':\n      return _objectSpread({}, state, {\n        isSignedIn: true,\n        userName: name,\n        email,\n        role\n      });\n\n    case 'SIGN_OUT':\n      return _objectSpread({}, state, {\n        isSignedIn: false,\n        userId: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst isAuthReducer = (isAuth = null, action) => {\n  if (action.type === 'SONG_SELECTED') {\n    return action.payload;\n  }\n\n  return isAuth;\n};\n\nexport default combineReducers({\n  login: loginReducer,\n  auth: isAuthReducer\n});","map":{"version":3,"sources":["/Users/Simon/Desktop/Coding/reactplayground/client/src/reducers/index.js"],"names":["combineReducers","INITIAL_STATE","loading","isSignedIn","userName","email","role","loginReducer","state","action","payload","name","type","userId","isAuthReducer","isAuth","login","auth"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,OAAO,EAAE,IADW;AAEpBC,EAAAA,UAAU,EAAE,IAFQ;AAGpBC,EAAAA,QAAQ,EAAE,IAHU;AAIpBC,EAAAA,KAAK,EAAE,IAJa;AAKpBC,EAAAA,IAAI,EAAE;AALc,CAAtB;;AAQA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGP,aAAT,EAAwBQ,MAAxB,KAAmC;AAAA,0BACxBA,MAAM,CAACC,OADiB;AAAA,QAC9CC,IAD8C,mBAC9CA,IAD8C;AAAA,QACxCN,KADwC,mBACxCA,KADwC;AAAA,QACjCC,IADiC,mBACjCA,IADiC;;AAEtD,UAAQG,MAAM,CAACG,IAAf;AACE,SAAK,SAAL;AACE,+BAAYJ,KAAZ;AAAmBL,QAAAA,UAAU,EAAE,IAA/B;AAAqCC,QAAAA,QAAQ,EAAEO,IAA/C;AAAqDN,QAAAA,KAArD;AAA4DC,QAAAA;AAA5D;;AACF,SAAK,UAAL;AACE,+BAAYE,KAAZ;AAAmBL,QAAAA,UAAU,EAAE,KAA/B;AAAsCU,QAAAA,MAAM,EAAE;AAA9C;;AACF;AACE,aAAOL,KAAP;AANJ;AAQD,CAVD;;AAYA,MAAMM,aAAa,GAAG,CAACC,MAAM,GAAG,IAAV,EAAgBN,MAAhB,KAA2B;AAC/C,MAAIA,MAAM,CAACG,IAAP,KAAgB,eAApB,EAAqC;AACnC,WAAOH,MAAM,CAACC,OAAd;AACD;;AAED,SAAOK,MAAP;AACD,CAND;;AAQA,eAAef,eAAe,CAAC;AAC7BgB,EAAAA,KAAK,EAAET,YADsB;AAE7BU,EAAAA,IAAI,EAAEH;AAFuB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\n\nconst INITIAL_STATE = {\n  loading: true,\n  isSignedIn: null,\n  userName: null,\n  email: null,\n  role: null\n};\n\nconst loginReducer = (state = INITIAL_STATE, action) => {\n  const { name, email, role } = action.payload;\n  switch (action.type) {\n    case 'SIGN_IN':\n      return { ...state, isSignedIn: true, userName: name, email, role };\n    case 'SIGN_OUT':\n      return { ...state, isSignedIn: false, userId: null };\n    default:\n      return state;\n  }\n};\n\nconst isAuthReducer = (isAuth = null, action) => {\n  if (action.type === 'SONG_SELECTED') {\n    return action.payload;\n  }\n\n  return isAuth;\n};\n\nexport default combineReducers({\n  login: loginReducer,\n  auth: isAuthReducer\n});\n"]},"metadata":{},"sourceType":"module"}