{"ast":null,"code":"var _jsxFileName = \"/Users/Simon/Desktop/Coding/reactplayground/client/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { isLogin } from './utils/index';\nexport default class Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      redirectToReferrer: false\n    };\n    this._isMounted = false;\n\n    this.login = () => {\n      isLogin.authenticate(data => {\n        if (this._isMounted) {\n          this.setState({\n            redirectToReferrer: true\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/login').then(res => console.log(res.body));\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const _ref = this.props.location.state || {\n      from: {\n        pathname: '/'\n      }\n    },\n          from = _ref.from;\n\n    const redirectToReferrer = this.state.redirectToReferrer;\n    if (redirectToReferrer) return React.createElement(Redirect, {\n      to: from,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"You must log in to view the page at\", from.pathname), React.createElement(\"button\", {\n      onClick: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Log in\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/Simon/Desktop/Coding/reactplayground/client/src/components/Login.js"],"names":["React","Component","Redirect","isLogin","Login","state","redirectToReferrer","_isMounted","login","authenticate","data","setState","componentDidMount","fetch","then","res","console","log","body","componentWillUnmount","render","props","location","from","pathname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,eAAxB;AAEA,eAAe,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC3CI,KAD2C,GACnC;AAAEC,MAAAA,kBAAkB,EAAE;AAAtB,KADmC;AAAA,SAG3CC,UAH2C,GAG9B,KAH8B;;AAAA,SAK3CC,KAL2C,GAKnC,MAAM;AACZL,MAAAA,OAAO,CAACM,YAAR,CAAqBC,IAAI,IAAI;AAC3B,YAAI,KAAKH,UAAT,EAAqB;AACnB,eAAKI,QAAL,CAAc;AAAEL,YAAAA,kBAAkB,EAAE;AAAtB,WAAd;AACD;AACF,OAJD;AAKD,KAX0C;AAAA;;AAa3CM,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CAAqCC,IAArC,CAA0CC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,CAAjD;AACA,SAAKX,UAAL,GAAkB,IAAlB;AACD;;AAEDY,EAAAA,oBAAoB,GAAG;AACrB,SAAKZ,UAAL,GAAkB,KAAlB;AACD;;AAEDa,EAAAA,MAAM,GAAG;AAAA,iBACU,KAAKC,KAAL,CAAWC,QAAX,CAAoBjB,KAApB,IAA6B;AAAEkB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ;AAAR,KADvC;AAAA,UACCD,IADD,QACCA,IADD;;AAAA,UAECjB,kBAFD,GAEwB,KAAKD,KAF7B,CAECC,kBAFD;AAIP,QAAIA,kBAAJ,EAAwB,OAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAEiB,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAExB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEGA,IAAI,CAACC,QAFR,CADF,EAKE;AAAQ,MAAA,OAAO,EAAE,KAAKhB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CADF;AASD;;AArC0C","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { isLogin } from './utils/index';\n\nexport default class Login extends Component {\n  state = { redirectToReferrer: false };\n\n  _isMounted = false;\n\n  login = () => {\n    isLogin.authenticate(data => {\n      if (this._isMounted) {\n        this.setState({ redirectToReferrer: true });\n      }\n    });\n  };\n\n  componentDidMount() {\n    fetch('http://localhost:3000/login').then(res => console.log(res.body));\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const { from } = this.props.location.state || { from: { pathname: '/' } };\n    const { redirectToReferrer } = this.state;\n\n    if (redirectToReferrer) return <Redirect to={from} />;\n\n    return (\n      <div>\n        <p>\n          You must log in to view the page at\n          {from.pathname}\n        </p>\n        <button onClick={this.login}>Log in</button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}